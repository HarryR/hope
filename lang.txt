LANGUAGE SPECIFICATION
----------------------

COMMAND-LINE STRING IS CONVERTED INTO AN ARRAY OF POINTERS
THAT CAN BE PASSED VIA ARGC/ARGV TO A SUB-PROGRAM.

THE META-LANGUAGE ALLOWS SUB-PROGRAMS TO BE INVOKED, AND THE
RESULT USED AS AN ARGUMENT TO ANOTHER PROGRAM.

FOR EXAMPLE:

	ECHO $TEST

WILL INVOKE THE `TEST` FUNCTION AND PASS THE RESULT AS THE
FIRST ARGUMENT OF `ECHO`. WITHOUT THE $ SYMBOL THE WORD "TEST"
WILL BE DISPLAYED.

FOR FUNCTIONS WHICH REQUIRE MULTIPLE ARGUMENTS THE BRACKETED
SYNTAX CAN BE USED:

	ECHO [ TEST ARG1 ARG2 ]

ARGUMENTS WHICH CONTAIN SPACES OR OTHER SPECIAL CHARACTERS CAN
BE PASSED USING THE QUOTED SYNTAX:

	ECHO "HELLO\nWORLD"

MULTIPLE STATEMENTS ARE SEPARATED BY THE SEMI-COLON SYMBOL;

	ECHO "HELLO"

THESE FOUR CONCEPTS ARE THE ONLY CORE COMPONENTS OF THE
INTERPRETER AND EVERYTHING ELSE IS IMPLEMENTED USING PLUGGABLE
MODULES, FOR EXAMPLE:

	LOOP ECHO [ EVAL $LINE ]

USES THE FOLLOWING FUNCTIONS:

	LINE - READ LINE OF INPUT
	EVAL - EVALUATE ARGUMENT, RETURN RESULT
	LOOP - EVALUATE ALL ARGUMENTS IN A LOOP

